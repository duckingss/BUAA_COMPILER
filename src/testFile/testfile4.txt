int a[11] = {0,0,0,0,0,0,0,0,0,0,0};
int b[11] = {0,0,0,0,0,0,0,0,0,0,0};
int c[11] = {0,0,0,0,0,0,0,0,0,0,0};
int d[11] = {0,0,0,0,0,0,0,0,0,0,0};
int n;
int Bubble(){
    int mid,i,j;
    int sum = 0;
    for(i=1;i<=n;i=i+1){
        for(j=1;j<=n-i;j=j+1){
            if(a[j]>a[j+1]){
                mid = a[j];
                a[j] = a[j+1];
                a[j+1] = mid;
            }
        }
    }
    for(i=1;i<n;i=i+1){
        sum = sum + (a[i+1] - a[i])*(a[i+1]-a[i]);
    }
    for(i=1;i<=n;i=i+1){
        printf(a[i]);
    }
    return (sum);
}
void Quick(int l,int r){
    int mid,m,endi,endj,i,j;
    if(l>=r)    return;
    i  = l+1;
    j = r;
    mid = b[l];

    while(i<=j){
    	endi = -1;
    	endj = -1;
        while(endi<0){
        	endi = 1;
        	if(b[i]<=mid){
        		if(i!=r){
        			endi = -1;
        			i = i +1;
				}
			}
		} 
		while(endj<0){
			endj = 1;
			if(b[j]>mid){
				if(j!=l){
					endj = -1;
					j = j-1;
				}
			}
		}
        if(i<=j){
            m = b[i];
            b[i] = b[j];
            b[j] = m; 
            i = i+1;
            j = j-1;
        }
    }
   
    m = b[j];
    b[j] = b[l];
    b[l] = m;
    Quick(l,j);
    Quick(j+1,r);
}
void Merge(int l,int r){
    int mid,i,j,k,end;
    mid = (l+r)/2;
    if(l==r) return ;
    Merge(l,mid);
    Merge(mid+1,r);
    for(i=l;i<=r;i=i+1)
        d[i] = c[i];
    i = l;
    j = mid+1;
    k = l;
    end = -1;
    while(end<0){
        if(d[i]<=d[j]){
            c[k] = d[i] ;
            k = k+1;
            i = i+1;
        }
        else{
            c[k] = d[j];
            k = k+1;
            j = j+1;
        } 
		if(i>mid)   end = 1;
		if(j>r)     end = 1;
    }
    while(i<=mid){
        c[k] = d[i];
        k = k+1;
        i = i+1;
    }
    while(j<=r){
        c[k] = d[j];
        k = k+1;
        j = j+1;
    }
}
int QuickSum(){
    int i;
    int sum =0 ;
    Quick(1,n);
    for(i=1;i<n;i=i+1)
        sum = sum + (b[i+1]+b[i])*(b[i+1]+b[i]);

    for(i=1;i<=n;i=i+1){
        printf(b[i]);
    }
    return (sum);
}
int MergeSum(){
    int i;
    int sum = 0;
    Merge(1,n);
    for(i=1;i<n;i=i+1){
        sum = sum + (c[i+1] - c[i])*(c[i+1]-c[i]);
        sum = sum + (c[i+1]+c[i])*(c[i+1]+c[i]);
    }
    for(i=1;i<=n;i=i+1){
        printf(c[i]);
    }
    return (sum);
}
void main(){
    int x,i;
    scanf(n);
    printf("18373054");
    for(i=1;i<=n;i=i+1){
        scanf(x);
        a[i] = x;
        b[i] = x;
        c[i] = x;
    }
     printf(Bubble());
     printf(QuickSum());
     printf(MergeSum());
}